---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: ui-auth

---
# ConfigMap for Envoy configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: ui-auth
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - name: envoy_listener
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 5050
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              http_filters:
              - name: envoy.filters.http.lua
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                  inline_code: |
                    function envoy_on_request(request_handle)
                      local function url_encode(str)
                        return str:gsub("([^%w-_.])", function(c)
                          return string.format("%%%02X", string.byte(c))
                        end)
                      end

                      if request_handle:headers():get(":path") == "/signout" then
                        local cookies = request_handle:headers():get("cookie")
                        local id_token = cookies and cookies:match("IdToken=([^;]+)") or ""
                        local post_redirect = "https://nanosexample.com:5050"

                        request_handle:respond(
                          {[":status"] = "200",
                           ["content-type"] = "text/html",
                           ["set-cookie"] = {
                             "BearerToken=deleted; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT",
                             "IdToken=deleted; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT",
                             "OauthHMAC=deleted; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT",
                             "OauthExpires=deleted; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT"
                           }},
                          [[<form id="f" method="POST" action="https://dev-53468963.okta.com/oauth2/default/v1/logout">
                             <input type="hidden" name="id_token_hint" value="]] .. id_token .. [[">
                             <input type="hidden" name="post_logout_redirect_uri" value="]] .. post_redirect .. [[">
                             </form><script>document.getElementById("f").submit()</script>]]
                        )
                      end
                    end
              - name: envoy.filters.http.oauth2
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
                  config:
                    token_endpoint:
                      cluster: oktaauth
                      uri: https://dev-53468963.okta.com/oauth2/default/v1/token
                      timeout: 3s
                    authorization_endpoint: https://dev-53468963.okta.com/oauth2/default/v1/authorize
                    redirect_uri: https://nanosexample.com:5050/callback
                    redirect_path_matcher:
                      path:
                        exact: /callback
                    signout_path:
                      path:
                        exact: /signout
                    credentials:
                      client_id: 0oa9n4fnjfR7KA5i15d7
                      hmac_secret:
                        name: token-secret
                    pass_through_matcher:
                    - name: allow-list
                      safe_regex:
                        google_re2: {}
                        regex: .*
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: envoy_route
                virtual_hosts:
                - name: envoy_vh
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: ui-service
              stat_config:
                stats_tags:
                - tag_name: cluster_name
                  regex: "^cluster\\.((.+?)\\.).*?$"
              codec_type: AUTO
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                - certificate_chain:
                    inline_string: |
                      -----BEGIN CERTIFICATE-----
                      # Your server certificate here
                      -----END CERTIFICATE-----
                  private_key:
                    inline_string: |
                      -----BEGIN PRIVATE KEY-----
                      # Your private key here
                      -----END PRIVATE KEY-----
      clusters:
      - name: ui-service
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: ui-service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: localhost
                    port_value: 5000
      - name: oktaauth
        connect_timeout: 5s
        type: LOGICAL_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: oktaauth
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: dev-53468963.okta.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: dev-53468963.okta.com

---
# Secret for TLS certificates (you'll need to add your actual certificates)
apiVersion: v1
kind: Secret
metadata:
  name: tls-certs
  namespace: ui-auth
type: Opaque
data:
  server.crt: LS0tLS1CRUdJTi... # Base64 encoded certificate
  server.key: LS0tLS1CRUdJTi... # Base64 encoded private key

---
# Secret for OAuth token
apiVersion: v1
kind: Secret
metadata:
  name: token-secret
  namespace: ui-auth
type: Opaque
data:
  token: eW91ci1zZWNyZXQtdG9rZW4= # Base64 encoded secret token

---
# Deployment with Envoy sidecar
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-service-with-envoy
  namespace: ui-auth
  labels:
    app: ui-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ui-service
  template:
    metadata:
      labels:
        app: ui-service
    spec:
      containers:
      # Main UI Service container
      - name: ui-service
        image: ubaids/my-ui-service:latest
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      
      # Envoy sidecar container
      - name: envoy
        image: envoyproxy/envoy:v1.34-latest
        args:
        - "--log-level"
        - "debug"
        - "--config-path"
        - "/etc/envoy/envoy.yaml"
        ports:
        - containerPort: 5050
          name: envoy-http
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
        - name: tls-certs
          mountPath: /etc/certs
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /ready
            port: 5050
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 5050
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
      
      volumes:
      - name: envoy-config
        configMap:
          name: envoy-config
      - name: tls-certs
        secret:
          secretName: tls-certs

---
# Service to expose the application
apiVersion: v1
kind: Service
metadata:
  name: ui-service
  namespace: ui-auth
  labels:
    app: ui-service
spec:
  type: LoadBalancer
  ports:
  - port: 5050
    targetPort: 5050
    protocol: TCP
    name: envoy-https
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: ui-http
  selector:
    app: ui-service

---
# ServiceMonitor for Prometheus monitoring (optional)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ui-service-monitor
  namespace: ui-auth
  labels:
    app: ui-service
spec:
  selector:
    matchLabels:
      app: ui-service
  endpoints:
  - port: envoy-https
    path: /stats/prometheus
    scheme: https
    tlsConfig:
      insecureSkipVerify: true